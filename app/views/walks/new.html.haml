- content_for :title do t("general.titles.walk.new") end
- content_for :body_class do "show_walk" end
- content_for :head do
  %script{:type => "text/javascript", :src => "//maps.googleapis.com/maps/api/js?sensor=false"}
  = javascript_include_tag('sanpomaps/sanpomap')
  :javascript
    var map = null;
    var options = {
      isNewWalk: true
    }
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        function (position) {
          options.centerLat = position.coords.latitude;
          options.centerLng = position.coords.longitude;
        },
        function (error) {
          switch(error.code) {
            case error.TIMEOUT:
              console.log('geolocation: Timeout');
              break;
            case error.POSITION_UNAVAILABLE:
              console.log('geolocation: Position unavailable');
              break;
            case error.PERMISSION_DENIED:
              console.log('geolocation: Permission denied');
              break;
            case error.UNKNOWN_ERROR:
              console.log('geolocation: Unknown error');
              break;
          }
        }
      );
    }
    $(function(){
      map = new SanpoMap(options);
    });
.container
  .page-header
    %h1= t("walks.new.new_photowalk")
= render :partial => 'map'
.container
  .row
    .span4
      %h2 Step 1
      %p Describe the photowalk you're sharing
    .span12
      = form_for @walk, :class => "form-stacked" do |f|
        = field_set_tag do
          .clearfix
            = f.label :title
            .input
              = f.text_field :title, :class => "xlarge"
          .clearfix
            = f.label :description
            .input
              = f.text_area :description, :rows => "5", :class => "xxlarge"
          .clearfix
            = f.label :notes
            .input
              = f.text_area :notes, :rows => "5", :class => "xxlarge"
          .clearfix
            = f.label :link
            .input
              = f.text_field :link, :class => "xlarge"
          #waypoints_container
          .actions
            = f.submit :class => "btn large primary", :value => t("general.save"), :disable_with => t("general.disable_with.saving")

